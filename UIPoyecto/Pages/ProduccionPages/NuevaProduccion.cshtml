@page
@{
    ViewData["Title"] = "Nueva Producción";
    <link rel="stylesheet" href="~/css/main.css">
}

<div class="container CenterColum">
    <input type="radio" name="slider" id="tab-1" checked>
    <input type="radio" name="slider" id="tab-2">
    <input type="radio" name="slider" id="tab-3">
    <header>
        <label for="tab-1" class="tab-1">1</label>
        <label for="tab-2" class="tab-2">2</label>
        <label for="tab-3" class="tab-3">3</label>
        <div class="slider-btn"></div>
    </header>

    <section class="box">
        <div class="formTitle">Nueva Producci&oacute;n</div>
        <div class="slider">
            <div class="box row8515 row1">
                <form class="colum5050" action="#">
                    <div class="box-detail">
                        <div hidden>
                            <input type="number" id="IdProduccion" />
                        </div>
                        <div class="input-box">
                            <span class="detail">Fecha de Ingreso</span>
                            <input type="date" required id="dpFechaInicio">
                        </div>
                        <div class="input-box">
                            <span class="detail">Costo Unitario del Lote</span>
                            <input type="number" min="0" step="1" placeholder="Ingrese el Costo" id="txtPrecioUnitario" required>
                        </div>
                        <div class="input-box">
                            <span class="detail">Semanas de Producci&oacute;n</span>

                            <input type="number" step="1" min="1" max="9" placeholder="Selecione una Especie" id="txtSemanasProd" required>

                        </div>
                        <div class="input-box">
                            <span class="detail">Especie De Pollo</span>
                            <select class="input" id="especie">
                                <option value="0">
                                    --Seleccione--
                                </option>
                            </select>
                            <div class="text-collaps hiden">
                                <div class="colum5050">
                                    <div>Semanas Min. de Produccion:</div>
                                    <div>7</div>
                                </div>
                                <div class="colum5050">
                                    <div>Pais de Origen:</div>
                                    <div>Rusia</div>
                                </div>
                                <div class="colum5050">
                                    <div>Descripcion:</div>
                                    <div>
                                        Mucho texto, Mucho texto, Mucho texto, Mucho texto, Mucho texto,
                                        Mucho texto, Mucho texto, Mucho texto, Mucho texto, Mucho texto,
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="box-detail">
                        <div class="input-box">
                            <span class="detail">Fecha de Cierre</span>
                            <input type="date" id="dpFechaFin" required>
                        </div>
                        <div class="input-box">
                            <span class="detail">Tamaño del Lote</span>
                            <input type="number" min="0" step="1" placeholder="Ingrese el Tamaño del Lote" id="txtTamanioLote" required>
                        </div>
                        <div class="input-box">
                            <span class="detail">Galera</span>
                            <select class="input" id="galera">
                                <option value="0">
                                    --Seleccione--
                                </option>
                            </select>
                            <div class="text-collaps hiden">
                                <div class="colum5050">
                                    <div>Semanas Min. de Producci&oacute;n:</div>
                                    <div>7</div>
                                </div>
                                <div class="colum5050">
                                    <div>Pais de Or&iacute;gen:</div>
                                    <div>Rusia</div>
                                </div>
                                <div class="colum5050">
                                    <div>Descripcion:</div>
                                    <div>
                                        Mucho texto, Mucho texto, Mucho texto, Mucho texto, Mucho texto,
                                        Mucho texto, Mucho texto, Mucho texto, Mucho texto, Mucho texto,
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
                <div class="formfooter colum5050 box-detail">
                    <a href="~/ProduccionPages/Index" class="Secondary-Button">Cancelar</a>
                    <label for="tab-2" class="tab-2 Primary-Button">Siguiente</label>
                </div>
            </div>
            <div class="box row8515 row1">
                <form class="colum5" action="#">
                    <div class="box-detail">
                        <h3>Semanas</h3>
                        <h4>Filtrar por:</h4>
                        <div class="input-box colum1580">
                            <div class="filter squer squer-active" id="tipoAlimentacion1"></div>
                            <span class="detail">Alimento</span>
                        </div>
                        <div class="input-box colum1580">
                            <div class="filter squer" id="tipoAlimentacion2"></div>
                            <span class="detail">Etapa</span>
                        </div>
                        <div class="input-box colum1580">
                            <div class="filter squer" id="tipoAlimentacion3"></div>
                            <span class="detail">L&iacute;nea</span>
                        </div>
                        <div class="input-box" style="margin-top: 20px;">
                            <span class="detail">Seleccione la L&iacute;nea</span>
                            <select class="input" id="ddlLinea" disabled>
                                <option value="0">
                                    --Seleccione--
                                </option>
                            </select>
                        </div>
                    </div>
                    <div class="box-detail">
                        <h3>Pre-Inicio</h3>
                        <div class="input-box">
                            <span class="detail">Seleccione Alimento</span>
                            <select class="input" id="preinicio">
                                <option value="0">
                                    --Seleccione--
                                </option>
                            </select>
                        </div>
                        <div class="input-box margin-top">
                            <span class="detail">Quintales Dispuestos</span>
                            <input type="number" min="0" id="quintPreInicio" step="1" placeholder="Ingrese los Quintales" required value="2">
                        </div>
                    </div>
                    <div class="box-detail">
                        <h3>Inicio</h3>
                        <div class="input-box">
                            <span class="detail">Seleccione Alimento</span>
                            <select class="input" id="inicio">
                                <option value="0">
                                    --Seleccione--
                                </option>
                            </select>
                        </div>
                        <div class="input-box margin-top">
                            <span class="detail">Quintales Dispuestos</span>
                            <input type="number" min="0" id="quintInicio" step="1" width="20%" placeholder="Ingrese los Quintales" required value="4">
                        </div>
                    </div>
                    <div class="box-detail">
                        <h3>Desarrollo</h3>
                        <div class="input-box">
                            <span class="detail">Seleccione Alimento</span>
                            <select class="input" id="desarrollo">
                                <option value="0">
                                    --Seleccione--
                                </option>
                            </select>
                        </div>
                        <div class="input-box margin-top">
                            <span class="detail">Quintales Dispuestos</span>
                            <input type="number" min="0" id="quintDesarrollo" step="1" width="20%" placeholder="Ingrese los Quintales" required value="4">
                        </div>
                    </div>
                    <div class="box-detail">
                        <h3>Final/Desarrollo</h3>
                        <div class="input-box colum1580">
                            <div class="type squer squer-active" id="finalizacion1"></div>
                            <span class="detail">Finalizaci&oacute;n</span>
                        </div>
                        <div class="input-box colum1580">
                            <div class="type squer" id="finalizacion2"></div>
                            <span class="detail">Desarrollo</span>
                        </div>
                        <div class="input-box">
                            <span class="detail">Seleccione Alimento</span>
                            <select class="input" id="finalizacion">
                                <option value="0">
                                    --Seleccione--
                                </option>
                            </select>
                        </div>
                        <div class="input-box">
                            <span class="detail">Quintales Dispuestos</span>
                            <input type="number" min="0" id="quintFinalizacion" step="1" placeholder="Ingrese los Quintales" required>
                        </div>
                    </div>
                </form>
                <div class="formfooter colum5050 box-detail">
                    <label for="tab-1" class="tab-1 Secondary-Button">Anterior</label>
                    <label for="tab-3" class="tab-3 Primary-Button">Siguiente</label>
                </div>
            </div>
            <div class="box row8515 row1">
                <form class="colum5050" action="#">
                    <div class="box-detail">
                        <h3>Tratamiento a Aplicar</h3>
                        <div class="input-box colum5050">
                            <div class="input-box colum1580">
                                <div class="squer squer-active" id="tipoTratamiento3"></div>
                                <span class="detail">Sanitización</span>
                            </div>
                            <div></div>
                        </div>
                        <div class="input-box">
                            <span class="detail">Dosis a Aplicar</span>
                            <input type="number" min="0" id="txtDosis" required>
                        </div>
                        <div class="input-box">
                            <span class="detail">Dosis Totales a Aplicar</span>
                            <input type="number" min="0" id="txtDosisTotal" required>
                        </div>
                        <div class="input-box">
                            <span class="detail">Descripci&oacute;n Dosis</span>
                            <input type="text" id="txtDosisDesc" required>
                        </div>
                        <div class="input-box">
                            <span class="detail">Aplicar Cada(dias)</span>
                            <select class="input" id="ddlPeridiocidad">
                                <option value="0">
                                    --Seleccione--
                                </option>
                            </select>
                        </div>
                        <div class="input-box">
                            <span class="detail">Via de Administracion</span>
                            <select class="input" id="ddlViaAdministracion">
                                <option value="0">
                                    --Seleccione--
                                </option>
                            </select>
                        </div>
                        <div class="input-box">
                            <span class="detail">Costo Tratamiento</span>
                            <input type="number" min="0" id="txtCosto" required>
                        </div>
                    </div>
                    <div class="box-detail">
                        <h3>Detalle Tratamiento</h3>
                        <div class="input-box colum5050">
                            <div class="input-box colum1580">
                                <div class="squer squer-active" id="tipoTratamiento1"></div>
                                <span class="detail">Existente</span>
                            </div>
                            <div class="input-box colum1580">
                                <div class="squer" id="tipoTratamiento2"></div>
                                <span class="detail">Nuevo</span>
                            </div>
                        </div>
                        <div class="input-box hiden" id="txtTratamiento">
                            <span class="detail">Nombre Tratamiento</span>
                            <input type="text" id="txtNombreTrat" required>
                        </div>
                        <div class="input-box" id="ddlTratamiento">
                            <span class="detail">Tratamiento</span>
                            <select class="input" id="ddlTratamientoSelect">
                                <option value="0">
                                    --Seleccione--
                                </option>
                            </select>
                        </div>
                        <div class="input-box">
                            <span class="detail">Descripcion Tratamiento</span>
                            <input type="text" placeholder="Ingrese descripcion" id="txtDescTrat" required disabled>
                        </div>
                        <div class="input-box">
                            <span class="detail">Descripcion Dosis</span>
                            <input type="text" placeholder="Ingrese descripcion" id="txtDescDosis" required disabled>
                        </div>
                        <div class="input-box colum5050">
                            <div class="input-box">
                                <span class="detail">Marca</span>
                                <input type="text" placeholder="Ingrese Marca" id="txtMarcaTrat" required disabled>
                            </div>
                            <div class="input-box">
                                <span class="detail">Dosis Recomendada</span>
                                <input type="text" placeholder="Ingrese Dosis" id="txtDosisTrat" required disabled>
                            </div>
                        </div>
                        <div class="input-box colum5050">
                            <div class="input-box">
                                <span class="detail">Lote Recomendado</span>
                                <input type="text" placeholder="Ingrese el Tamaño del Lote" id="txtTamaño" required disabled>
                            </div>
                            <div class="input-box">
                                <span class="detail">Dosis Totales</span>
                                <input type="text" placeholder="Ingrese Dosis" id="txtDosisTotales" required disabled>
                            </div>
                        </div>

                        <div class="hiden input-box" id="ddlBox">
                            <div class="input-box">
                                <span class="detail">Peridiocidad Recomendado</span>
                                <select class="input" id="ddlPeridiocidadRecom">
                                    <option value="0">
                                        --Seleccione--
                                    </option>
                                </select>
                            </div>
                            <div class="input-box">
                                <span class="detail">Via Recomendada</span>
                                <select class="input" id="ddlViaRecom">
                                    <option value="0">
                                        --Seleccione--
                                    </option>
                                </select>
                            </div>
                        </div>

                        <div class="input-box colum5050" id="txtBox">
                            <div class="input-box">
                                <span class="detail">Peridiocidad Recomendado</span>
                                <input type="text" placeholder="Ingrese la Peridiosidad" id="txtPeridiocidadRecom" required disabled>
                            </div>
                            <div class="input-box">
                                <span class="detail">Via Recomendada</span>
                                <input type="text" placeholder="Ingrese Dosis" id="txtViaRecomendada" required disabled>
                            </div>
                        </div>
                    </div>
                </form>
                <div class="formfooter colum5050 box-detail">
                    <label for="tab-2" class="tab-2 Secondary-Button">Anterior</label>
                    <label class="Primary-Button" id="btnGuardarProduccion">Registrar</label>
                </div>
            </div>
        </div>
    </section>
</div>

<script src="~/js/changeTheme.js" asp-append-version="true"></script>
@*<script src="~/js/changeRadioBTN.js" asp-append-version="true"></script>
<script src="~/js/filterSelect.js" asp-append-version="true"></script>*@

<script type="module">
    import CreateDropdown from "../js/ComponentesJs/DropDownComponent.js";
    import GetObjectData from "../js/ComponentesJs/GetDatosByApiUrlComponent.js";
    import SaveObjectData from "../js/ComponentesJs/PutDatoByApiUrlComponent.js";
    import GetObjectDataByFilter from "../js/ComponentesJs/GetDatoByApiUrlFiltering.js";



    let IdTratamientoAsignado;
    let bandTratamientoaSanitizacion = true;
    let bandTratamientoNuevo = false;

    //objetos para nueva produccion

    let listaDetalleAlimentoProduccion = [];

    let newPro = {
        fechaDeIngreso: new Date(),
        idProduccion: 0,
        lote: 0,
        costoUnitLote: 0,
        idEspecie: 0,
        quintUtil: 0,
        fechaSalida: new Date(),
        idGalera: 0,
        idUsuarioRegistro: 0,
        estadoProduccion: false
    }


    let nuevoTratamiento = {

                idTratamiento: 0,
        descripcion: "string",
        nombre: "string",
        marca: "string",
        dosisDiariaRecomendada: 0,
        idPeridiocidadRecomendada: 0,
        idUsuarioRegistro: 0,
        fechaRegistro: "",
        idViaAdministracionRecomendada: 0,
        loteAdministracionRecomendada: 0,
        dosisTotalesRecomendadas: 0,
        descripcionDosisdiaria: "",
    }

    let nuevoTratamientoAsignadoProduccion = {
        idTratamientoProduccion: 0,
        idProduccion: 0,
        idTratamiento: 0,
        dosisTotalesAplicada: 0,
        idPeridiocidadTratamiento: 0,
        dosisDiaria: 0,
        idViaAdministracionAplicacada: 0,
        costoTratamiento: 0,
        fechaAsignacion: new Date(),
        idUsuarioAsigna: 0,
        estadoAplicacion: 0,
        estadoCompletado: 0,
        cambioEstadoPermitidoTratamientoProduccion: 0,
        idUsuarioRegistro: 0,
        progresoAplicacion: 0,
        descripcionDosisdiaria: "string",
        tratamientoSanitario: 0
    }

    window.onload = async () => {

        

        await cargarDLEspecie();
        await cargarDLGalera();
        await cargarDLLinea();
        await cargarDLPreinicio();
        await cargarDLInicio();
        await cargarDLDesarrollo();
        await cargarDLFinalizacion();
        await cargarDLPeridiosidad();
        await cargarDLViaAdm();
        await cargarDLTratamiento();

        dpFechaInicio.value = formatear(new Date());
        dpFechaFin.value = formatear(new Date());
        document.querySelector("#dpFechaInicio").addEventListener("change", function () {
            actualizarFecha();
        });

        btnGuardarProduccion.onclick = async () => {
            const totalQuintales = (parseInt(quintPreInicio.value) + parseInt(quintInicio.value) + parseInt(quintDesarrollo.value) +  parseInt(quintFinalizacion.value));
            let idTratamiento = 0;
            let idProduccionNueva = 0;
            //asignacion de produccion

            newPro.lote = parseInt(txtTamanioLote.value);
            newPro.costoUnitLote = parseInt(txtPrecioUnitario.value);
            newPro.idEspecie =  parseInt(especie.value);
            newPro.quintUtil = totalQuintales; //hacer cuando tenga las etapas
            newPro.idGalera = parseInt(galera.value);
            newPro.idUsuarioRegistro = 0; //cambiar cuando haya login
            newPro.estadoProduccion = true; //siempre es false
            let url = '../api/Produccion/SaveProD';
            idProduccionNueva = await SaveObjectData(url, newPro);

            //asignacion de alimentos a produccion
            listaDetalleAlimentoProduccion.push(
                {
                    idAlimentoProduccion: parseInt(preinicio.value),
                    quintalesAlimento: parseInt(quintPreInicio.value),
                    idEtapaAlimentoProduccion: 1,
                    idProduccionDetalleAlimento: parseInt(idProduccionNueva)  //asignada al guardar la produccion de arriba
                },
                {
                    idAlimentoProduccion: parseInt(inicio.value),
                    quintalesAlimento: parseInt(quintInicio.value),
                    IdEtapaAlimentoProduccion: 2,
                    idProduccionDetalleAlimento: parseInt(idProduccionNueva)  //asignada al guardar la produccion de arriba
                },
                {
                    idAlimentoProduccion: parseInt(desarrollo.value),
                    quintalesAlimento: parseInt(quintDesarrollo.value),
                    idEtapaAlimentoProduccion: 3,
                    idProduccionDetalleAlimento: parseInt(idProduccionNueva)  //asignada al guardar la produccion de arriba
                },
                {
                    idAlimentoProduccion:  parseInt(finalizacion.value),
                    quintalesAlimento: parseInt(quintFinalizacion.value),
                    idEtapaAlimentoProduccion: 4,
                    idProduccionDetalleAlimento: parseInt(idProduccionNueva)  //asignada al guardar la produccion de arriba
                }
            );
            url = '../api/Alimento/SaveListaDetalleAlimentoProduccion';
            await SaveObjectData(url, listaDetalleAlimentoProduccion);

            //asignacion de tratamiento
            let nuevaAsignacionTratamiento = {
                idTratamientoProduccion: 0,
                idProduccion: idProduccionNueva,
                idTratamiento: parseInt(ddlTratamientoSelect.value),
                dosisTotalesAplicada: parseInt(txtDosisTotal.value),
                idPeridiocidadTratamiento: parseInt(txtDosis.value),
                dosisDiariaAplicada: parseInt(txtDosis.value),
                idViaAdministracionAplicacada: parseInt(ddlViaAdministracion.value),
                costoTratamiento: parseInt(txtCosto.value),
                fechaAsignacion: "2023-01-15",
                idUsuarioAsigna: 0,
                estadoAplicacion: false,
                estadoCompletado: false,
                cambioEstadoPermitidoTratamientoProduccion: true,
                idUsuarioRegistro: 0,
                progresoAplicacion: 0,
                descripcionDosisdiaria: "se aplica asi",
                tratamientoSanitario: true
            }


            if (bandTratamientoNuevo) {
                nuevoTratamiento.descripcion = txtDescTrat.value;
                nuevoTratamiento.descripcionDosisdiaria = txtDescDosis.value;
                nuevoTratamiento.dosisDiariaRecomendada = parseInt(txtDosisTrat.value);
                nuevoTratamiento.dosisTotalesRecomendadas = parseInt(txtDosisTotales.value);
                nuevoTratamiento.nombre = txtNombreTrat.value;
                nuevoTratamiento.marca = txtMarcaTrat.value;
                nuevoTratamiento.idPeridiocidadRecomendada = parseInt(ddlPeridiocidadRecom.value);
                nuevoTratamiento.idViaAdministracionRecomendada = parseInt(ddlViaRecom.value);
                nuevoTratamiento.loteAdministracionRecomendada = parseInt(txtTamaño.value);



                url = '../api/Tratamiento/SaveTratamiento';
                idTratamiento = await SaveObjectData(url, nuevoTratamiento);
                nuevaAsignacionTratamiento.idTratamiento = idTratamiento;

            } 

            url = '../api/Tratamiento/SaveTratamiendoProduccionAsignado';
            await SaveObjectData(url, nuevaAsignacionTratamiento);

           

        };


        document.querySelector("#txtSemanasProd").addEventListener("change", async function () {
            actualizarFecha();
        });
        document.querySelector("#galera").addEventListener("change", async function () {
            txtTamanioLote.value = 200;
        });
        document.querySelector("#especie").addEventListener("change", async function () {
            let especie = await GetObjectDataByFilter("../api/EspeciePollo/GetEspecieByIdEspecie", "IdEspecie", this.value);
            txtSemanasProd.value = especie.semanasProduccion;
            txtPrecioUnitario.value = especie.precioUnit;
            actualizarFecha();
        });

        document.querySelector("#ddlTratamientoSelect").addEventListener("change", async function () {
            selectDDLTratamientoAsignado(this.value);
        });


    };
    const formatear = f => {
        const año = f.getFullYear();
        const mes = ("0" + (f.getMonth() + 1)).substr(-2);
        const dia = ("0" + f.getDate()).substr(-2);
        return `${año}-${mes}-${dia}`
    };
    const actualizarFecha = () => {
        let fechaInicio = new Date(dpFechaInicio.value);

        newPro.fechaDeIngreso = formatear(fechaInicio);

        if (txtSemanasProd.value != '') {
            fechaInicio.setDate(fechaInicio.getDate() + (txtSemanasProd.value * 7))
            dpFechaFin.value = formatear(fechaInicio);

            newPro.fechaSalida = formatear(fechaInicio);
            nuevoTratamiento.fechaRegistro = formatear(fechaInicio);

        } else {
            dpFechaFin.value = formatear(new Date());

            newPro.fechaSalida = formatear(new Date());
            nuevoTratamiento.fechaRegistro = formatear(new Date());


        }
    }


    const selectDDLTratamientoAsignado = async (id) => {
        if (id != 0) {

            let trat = await GetObjectDataByFilter("../api/Tratamiento/GetTratamientoByIdTratamiento", "IdTratamiento", id);


            IdTratamientoAsignado = trat.id;
            txtNombreTrat.value = trat.nombreTratamiento;
            txtMarcaTrat.value = trat.marca;
            txtDosis.value = trat.dosisRecomendada;
            txtDosisTrat.value = trat.dosisRecomendada;
            txtTamaño.value = trat.lote;

            txtDescTrat.value = trat.descripcion;
            txtDescDosis.value = trat.descripcionDosis;
            txtDosisDesc.value = trat.descripcionDosis;
            console.log(new Intl.NumberFormat('de-DE', { style: 'currency', currency: 'EUR' }).format(trat.dosisTotales));
            txtDosisTotal.value = trat.dosisTotales;
            txtDosisTotales.value = trat.dosisTotales;

            txtPeridiocidadRecom.value = trat.nombrePeridiocidad;

            txtViaRecomendada.value = trat.administracion;

            document.getElementById("ddlPeridiocidad").querySelector("option[value='" + trat.idPeridiocidad + "']").selected = true;
            document.getElementById("ddlViaAdministracion").querySelector("option[value='" + trat.idVia + "']").selected = true;
            document.getElementById("txtCosto").focus();
        } else {
            limpiar();
        }

    }


    const limpiar = () => {
        txtNombreTrat.value = '';
        txtDosisTrat.value = '';
        txtTamaño.value = '';
        txtDescTrat.value = '';
        txtDescDosis.value = '';
        txtMarcaTrat.value = '';
        txtDosisTotales.value = '';
        txtPeridiocidadRecom.value = '';
        txtViaRecomendada.value = '';
        document.getElementById("ddlTratamientoSelect").querySelector("option[value='" + 0 + "']").selected = true;
        document.getElementById("ddlPeridiocidadRecom").querySelector("option[value='" + 0 + "']").selected = true;
        document.getElementById("ddlViaRecom").querySelector("option[value='" + 0 + "']").selected = true;


    }








    const cargarDLEspecie = async () => {
        let especieData = await GetObjectData('../api/EspeciePollo/GetEspeciesNombreCompuesto');

        CreateDropdown(especieData, especie, 'descripccion', 'idEspecie');
    };

    const cargarDLGalera = async () => {
        let galeraData = await GetObjectData('../api/Galera/GetGaleraSinProduccion');

        CreateDropdown(galeraData, galera, 'nombre', 'idGalera');
    };

    const cargarDLLinea = async () => {
        let lineaData = await GetObjectData('../api/Alimento/GetLineaAlimentoDropdown');

        CreateDropdown(lineaData, ddlLinea, 'nombre', 'idLinea');
    };

    const cargarDLViaAdm = async () => {
        let ViaAdmData = await GetObjectData('../api/Tratamiento/GetViaAdministracionBasico');

        CreateDropdown(ViaAdmData, ddlViaAdministracion, 'tipoAdministracion', 'idViaAdministracion');
    };

    const cargarDLPeridiosidad = async () => {
        let dosisData = await GetObjectData('../api/Catalogos/GetPeridiocidadDropdown');

        CreateDropdown(dosisData, ddlPeridiocidad, 'nombre', 'idPeriodicidad');
        CreateDropdown(dosisData, ddlPeridiocidadRecom, 'nombre', 'idPeriodicidad');

    };

    const cargarDLViaAdmRecom = async () => {
        let ViaAdmData = await GetObjectData('../api/Tratamiento/GetViaAdministracionBasico');

        CreateDropdown(ViaAdmData, ddlViaRecom, 'tipoAdministracion', 'idViaAdministracion');
    };

    const cargarDLDosisRecom = async () => {
        let dosisData = await GetObjectData('../api/Catalogos/GetPeridiocidadDropdown');

        CreateDropdown(dosisData, ddlPeridiocidadRecom, 'nombre', 'idPeridiosidad');
    };

    const cargarDLTratamiento = async () => {
        let tratamientoData = await GetObjectData('../api/Tratamiento/GetTratamientosBasico');

        CreateDropdown(tratamientoData, ddlTratamientoSelect, 'nombre', 'idTratamiento');
    };

    const cargarDLPreinicio = async () => {
        let alimentoData = await GetObjectData('../api/Alimento/GetAlimentoAllDropdown');

        document.getElementById("preinicio").innerHTML = "";
        const options = document.createElement("option");
        options.innerText = "-Seleccione-";
        options.value = 0;
        document.getElementById("preinicio").append(options);
        CreateDropdown(alimentoData, preinicio, 'nombre', 'idAlimento');
    };

    const cargarDLInicio = async () => {
        let alimentoData = await GetObjectData('../api/Alimento/GetAlimentoAllDropdown');

        document.getElementById("inicio").innerHTML = "";
        const options = document.createElement("option");
        options.innerText = "-Seleccione-";
        options.value = 0;
        document.getElementById("inicio").append(options);
        CreateDropdown(alimentoData, inicio, 'nombre', 'idAlimento');
    };

    const cargarDLDesarrollo = async () => {
        let alimentoData = await GetObjectData('../api/Alimento/GetAlimentoAllDropdown');

        document.getElementById("desarrollo").innerHTML = "";
        const options = document.createElement("option");
        options.innerText = "-Seleccione-";
        options.value = 0;
        document.getElementById("desarrollo").append(options);
        CreateDropdown(alimentoData, desarrollo, 'nombre', 'idAlimento');
    };

    const cargarDLFinalizacion = async () => {
        let alimentoData = await GetObjectData('../api/Alimento/GetAlimentoAllDropdown');

        document.getElementById("finalizacion").innerHTML = "";
        const options = document.createElement("option");
        options.innerText = "-Seleccione-";
        options.value = 0;
        document.getElementById("finalizacion").append(options);
        CreateDropdown(alimentoData, finalizacion, 'nombre', 'idAlimento');
    };

    const cargarDLPreinicioEtapa = async () => {
        let alimentoData = await GetObjectData('../api/Alimento/GetAlimentoPreInicioDropdown');

        document.getElementById("preinicio").innerHTML = "";
        const options = document.createElement("option");
        options.innerText = "-Seleccione-";
        options.value = 0;
        document.getElementById("preinicio").append(options);
        CreateDropdown(alimentoData, preinicio, 'nombre', 'idAlimento');
    };

    const cargarDLInicioEtapa = async () => {
        let alimentoData = await GetObjectData('../api/Alimento/GetAlimentoInicioDropdown');

        document.getElementById("inicio").innerHTML = "";
        const options = document.createElement("option");
        options.innerText = "-Seleccione-";
        options.value = 0;
        document.getElementById("inicio").append(options);
        CreateDropdown(alimentoData, inicio, 'nombre', 'idAlimento');
    };

    const cargarDLDesarrolloEtapa = async () => {
        let alimentoData = await GetObjectData('../api/Alimento/GetAlimentoDesarrolloDropdown');

        document.getElementById("desarrollo").innerHTML = "";
        const options = document.createElement("option");
        options.innerText = "-Seleccione-";
        options.value = 0;
        document.getElementById("desarrollo").append(options);
        CreateDropdown(alimentoData, desarrollo, 'nombre', 'idAlimento');
    };

    const cargarDLDesarrolloEtapaFinalizacion = async () => {
        let alimentoData = await GetObjectData('../api/Alimento/GetAlimentoDesarrolloDropdown');

        document.getElementById("finalizacion").innerHTML = "";
        const options = document.createElement("option");
        options.innerText = "-Seleccione-";
        options.value = 0;
        document.getElementById("finalizacion").append(options);
        CreateDropdown(alimentoData, finalizacion, 'nombre', 'idAlimento');
    };

    const cargarDLFinalizacionEtapa = async () => {
        let alimentoData = await GetObjectData('../api/Alimento/GetAlimentoFinalizacionDropdown');

        document.getElementById("finalizacion").innerHTML = "";
        const options = document.createElement("option");
        options.innerText = "-Seleccione-";
        options.value = 0;
        document.getElementById("finalizacion").append(options);
        CreateDropdown(alimentoData, finalizacion, 'nombre', 'idAlimento');
    };

    const cargarDLPreinicioLinea = async (id) => {
        let alimentoData = await GetObjectDataByFilter('../api/Alimento/GetAlimentoPreInicioDropdownByIdLinea', "IdLinea", id);

        document.getElementById("preinicio").innerHTML = "";
        const options = document.createElement("option");
        options.innerText = "-Seleccione-";
        options.value = 0;
        document.getElementById("preinicio").append(options);
        CreateDropdown(alimentoData, preinicio, 'nombre', 'idAlimento');
    };

    const cargarDLInicioLinea = async (id) => {
        let alimentoData = await GetObjectDataByFilter('../api/Alimento/GetAlimentoInicioDropdownByIdLinea', "IdLinea", id);

        document.getElementById("inicio").innerHTML = "";
        const options = document.createElement("option");
        options.innerText = "-Seleccione-";
        options.value = 0;
        document.getElementById("inicio").append(options);
        CreateDropdown(alimentoData, inicio, 'nombre', 'idAlimento');
    };

    const cargarDLDesarrolloLinea = async (id) => {
        let alimentoData = await GetObjectDataByFilter('../api/Alimento/GetAlimentoDesarrolloDropdownByIdLinea', "IdLinea", id);

        document.getElementById("desarrollo").innerHTML = "";
        const options = document.createElement("option");
        options.innerText = "-Seleccione-";
        options.value = 0;
        document.getElementById("desarrollo").append(options);
        CreateDropdown(alimentoData, desarrollo, 'nombre', 'idAlimento');
    };

    const cargarDLFinalizacionLinea = async (id) => {
        let alimentoData = await GetObjectDataByFilter('../api/Alimento/GetAlimentoFinalizacionDropdownByIdLinea', "IdLinea", id);

        document.getElementById("finalizacion").innerHTML = "";
        const options = document.createElement("option");
        options.innerText = "-Seleccione-";
        options.value = 0;
        document.getElementById("finalizacion").append(options);
        CreateDropdown(alimentoData, finalizacion, 'nombre', 'idAlimento');
    };

    const cargarDLDesarrolloLineaFinalizacion = async (id) => {
        let alimentoData = await GetObjectDataByFilter('../api/Alimento/GetAlimentoDesarrolloDropdownByIdLinea', "IdLinea", id);

        document.getElementById("finalizacion").innerHTML = "";
        const options = document.createElement("option");
        options.innerText = "-Seleccione-";
        options.value = 0;
        document.getElementById("finalizacion").append(options);
        CreateDropdown(alimentoData, finalizacion, 'nombre', 'idAlimento');
    };

    const rdAlimentacion1 = document.getElementById('tipoAlimentacion1');
    const rdAlimentacion2 = document.getElementById('tipoAlimentacion2');
    const rdAlimentacion3 = document.getElementById('tipoAlimentacion3');
    const rdFinalizacion1 = document.getElementById('finalizacion1');
    const rdFinalizacion2 = document.getElementById('finalizacion2');
    const rdTratamiento1 = document.getElementById('tipoTratamiento1');
    const rdTratamiento2 = document.getElementById('tipoTratamiento2');
    const rdTratamiento3 = document.getElementById('tipoTratamiento3');
    const ddlLinea = document.getElementById('ddlLinea');
    const ddlTratamiento = document.getElementById('ddlTratamiento');
    const txtTratamiento = document.getElementById('txtTratamiento');
    const ddlBox = document.getElementById('ddlBox');
    const txtBox = document.getElementById('txtBox');

    rdAlimentacion1.addEventListener('click', async () => {
        if (!rdAlimentacion1.classList.contains('squer-active')) {
            rdAlimentacion1.classList.toggle('squer-active');

            rdAlimentacion2.classList.remove('squer-active');
            rdAlimentacion3.classList.remove('squer-active');
            ddlLinea.value = 0;
            ddlLinea.disabled = true;

            await cargarDLPreinicio();
            await cargarDLInicio();
            await cargarDLDesarrollo();
            await cargarDLFinalizacion();
        }
    });

    rdAlimentacion2.addEventListener('click', async () => {
        if (!rdAlimentacion2.classList.contains('squer-active')) {
            rdAlimentacion2.classList.toggle('squer-active');

            rdAlimentacion1.classList.remove('squer-active');
            rdAlimentacion3.classList.remove('squer-active');
            ddlLinea.value = 0;
            ddlLinea.disabled = true;

            await cargarDLPreinicioEtapa();
            await cargarDLInicioEtapa();
            await cargarDLDesarrolloEtapa();
            await cargarDLFinalizacionEtapa();
        }
    });

    rdAlimentacion3.addEventListener('click', () => {
        if (!rdAlimentacion3.classList.contains('squer-active')) {
            rdAlimentacion3.classList.toggle('squer-active');

            rdAlimentacion1.classList.remove('squer-active');
            rdAlimentacion2.classList.remove('squer-active');
            ddlLinea.disabled = false;
        }
    });

    rdFinalizacion1.addEventListener('click', async () => {
        if (!rdFinalizacion1.classList.contains('squer-active')) {
            rdFinalizacion1.classList.toggle('squer-active');
            rdFinalizacion2.classList.toggle('squer-active');


            if (rdAlimentacion2.classList.contains("squer-active")) {
                await cargarDLFinalizacionEtapa();
            } else if (rdAlimentacion3.classList.contains("squer-active")) {
                await cargarDLFinalizacionLinea(ddlLinea.value);
            }

        }
    });

    rdFinalizacion2.addEventListener('click', async () => {
        if (!rdFinalizacion2.classList.contains('squer-active')) {
            rdFinalizacion1.classList.toggle('squer-active');
            rdFinalizacion2.classList.toggle('squer-active');

            if (rdAlimentacion2.classList.contains("squer-active")) {
                await cargarDLDesarrolloEtapaFinalizacion();
            } else if (rdAlimentacion3.classList.contains("squer-active")) {
                await cargarDLDesarrolloLineaFinalizacion(ddlLinea.value);
            }
        }
    });

    rdTratamiento1.addEventListener('click', () => {
        if (!rdTratamiento1.classList.contains('squer-active')) {
            rdTratamiento1.classList.toggle('squer-active');
            rdTratamiento2.classList.toggle('squer-active');

            ddlTratamiento.classList.toggle('hiden');
            txtTratamiento.classList.toggle('hiden');

            txtBox.classList.add('colum5050');
            ddlBox.classList.remove('colum5050');
            ddlBox.classList.add('hiden');
            limpiar();
            bandTratamientoNuevo = false;

            document.getElementById('txtDescTrat').disabled =   true;
            document.getElementById('txtDescDosis').disabled =  true;
            document.getElementById('txtMarcaTrat').disabled =  true;
            document.getElementById('txtDosisTrat').disabled =  true;
            document.getElementById('txtTamaño').disabled =     true;
            document.getElementById('txtDosisTotales').disabled = true;




        }
    });

    rdTratamiento2.addEventListener('click', async () => {
        if (!rdTratamiento2.classList.contains('squer-active')) {
            //if false
            rdTratamiento1.classList.toggle('squer-active');
            rdTratamiento2.classList.toggle('squer-active');

            ddlTratamiento.classList.toggle('hiden');
            txtTratamiento.classList.toggle('hiden');

            ddlBox.classList.add('colum5050');
            txtBox.classList.remove('colum5050');
            txtBox.classList.add('hiden');

            await cargarDLDosisRecom();
            await cargarDLViaAdmRecom();

            limpiar();
            bandTratamientoNuevo = true;

            document.getElementById('txtDescTrat').disabled =   false;
            document.getElementById('txtDescDosis').disabled =  false;
            document.getElementById('txtMarcaTrat').disabled =  false;
            document.getElementById('txtDosisTrat').disabled =  false;
            document.getElementById('txtTamaño').disabled =     false;
            document.getElementById('txtDosisTotales').disabled = false;


            txtTamaño.value = txtTamanioLote.value;
        }
    });

    rdTratamiento3.addEventListener('click', () => {
        rdTratamiento3.classList.toggle('squer-active');
        if (rdTratamiento3.classList.contains('squer-active')) {
            bandTratamientoaSanitizacion = true;
        } else {
            bandTratamientoaSanitizacion = false;
        }
    });

    document.querySelector('#ddlLinea').onchange = async e => {

        const { value: property, text: label } = e.target.selectedOptions[0]

        await cargarDLPreinicioLinea(property);
        await cargarDLInicioLinea(property);
        await cargarDLDesarrolloLinea(property);
        await cargarDLFinalizacionLinea(property);
    }








</script>
