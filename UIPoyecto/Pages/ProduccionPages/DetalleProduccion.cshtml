@page
@model DetalleProduccionModel
@{
    ViewData["Title"] = "Detalle Producción";
    <link rel="stylesheet" href="~/css/main.css">
}

<div class="colum1">
    <div class="box Center">
        <div class="cardDetail">
            <div class="row">
                <div class="NumProd Center">
                    <a class="left" href="~/ProduccionPages/Index"><ion-icon name="arrow-undo-circle"></ion-icon></a>
                    <h3>Lote</h3><span id="numProd"></span>
                </div>
                <div class="box">
                    <ul class="details colum5050" id="detailBox"></ul>
                </div>
            </div>
        </div>
    </div>

    <div class="tabs box">
        <div class="tab-container">
            <div id="tab2" class="tab">
                <a href="#tab2">Actividades Tratamiento</a>
                <div class="tab-content">
                    <section class="colum2">
                        <div class="box">
                            <h2>Lista de Actividades Tratamiento</h2>
                            <ul class="datalist scrollable table-medium" id="dlActividadesTrat"></ul>
                        </div>
                        <div class="box"></div>
                    </section>
                </div>
            </div>
            <div id="tab1" class="tab">
                <a href="#tab1">Actividades Producci&oacute;n </a>
                <div class="tab-content">
                    <section class="colum2">
                        <div class="box">
                            <h2>Lista de Actividades</h2>
                            <ul class="datalist scrollable table-medium" id="dlActividades"></ul>
                        </div>
                        <div class="box">
                            <div class="formContainer">
                                <div class="formTitle">Detalle Actividad</div>
                                <form action="#">
                                    <div class="box-detail">
                                        <div hidden>
                                            <input type="number" id="IdGal" />
                                        </div>
                                        <div class="input-box">
                                            <span class="detail">Nombre Galera</span>
                                            <input type="text" placeholder="Ingrese el Nombre de la Galera" id="NombreGal" required>
                                        </div>
                                        <div class="input-box">
                                            <span class="detail">Largo Galera</span>
                                            <input type="number" placeholder="Ingrese el Largo de la Galera" id="DimL" required>
                                        </div>
                                        <div class="input-box">
                                            <span class="detail">Ancho Galera</span>
                                            <input type="number" placeholder="Ingrese el Ancho de la Galera" id="DimA" required>
                                        </div>
                                        <div class="input-box">
                                            <span class="detail">Capacidad Maxima</span>
                                            <input type="number" placeholder="Ingrese Capacidad de la Galera" id="CapMax" required>
                                        </div>
                                        <div class="input-box">
                                            <span class="detail">Latitud</span>
                                            <input type="text" placeholder="Ingrese la Latitud" id="UbiLat" required>
                                        </div>
                                        <div class="input-box">
                                            <span class="detail">Longuitud</span>
                                            <input type="text" placeholder="Ingrese la Longuitud" id="UbiLon" required>
                                        </div>
                                    </div>

                                    <div class="buttons">
                                        <input class="Secondary-Button" type="submit" value="Cancelar" id="btnCancelarGalera" style="width: 45%">
                                        <input class="Primary-Button" type="submit" value="Registrar" id="btnGuardarGalera" style="width: 45%">
                                    </div>
                                </form>
                            </div>
                        </div>
                    </section>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/js/changeTheme.js" asp-append-version="true"></script>

<script type="module">
    let urlParams = new URLSearchParams(window.location.search);
    let id = urlParams.get("id");
    console.log(id);

    import CreateDataList from "../js/ComponentesJs/StatusListComponent.js";
    import GetObjectData from "../js/ComponentesJs/GetDatosByApiUrlComponent.js";
    import GetObjectDataByFilter from "../js/ComponentesJs/GetDatoByApiUrlFiltering.js";
    import CreateDetailCard from "../js/ComponentesJs/CardDetailComponent.js";

    window.onload = async () => {

        await cargarDLActividadesProduccion();
        await CreateDetailCardProduccion();
        await cargarDLActividadesTratamientoProduccion();
    };
    const formatear = f => {
        const año = f.getFullYear();
        const mes = ("0" + (f.getMonth() + 1)).substr(-2);
        const dia = ("0" + f.getDate()).substr(-2);
        return `${año}-${mes}-${dia}`
    };

    const cargarDLActividadesProduccion = async () => {
        let fecha =formatear(new Date());
        //let actividadProduccion = await GetObjectDataByFilter("../api/Actividades/GetActividadesByIdProduccionFecha", ["IdProduccion", "Fecha"], [id, "'" +fecha+ "'"]);
        let actividadProduccion = await GetObjectDataByFilter("../api/Actividades/GetActividadesByIdProduccion", "IdProduccion", id);

        //let prodData = await GetObjectData("../api/Produccion/GetVistaListaProduccionSimpleCalculada");
        //let prodDataActive = await GetObjectData("../api/Produccion/GetVistaListaProduccionSimpleCalculadaActiva");

        //response = await response.json();
        CreateDataList(actividadProduccion, dlActividades, (item) => { editAlim(item); }, 'colum7', 'DetalleProduccion');
        //CreateDataList(prodDa
        //CreateDetailCardProduccion(ta, histDl, (item) => { editAlim(item); }, 'colum9');
        //};

    const cargarDLActividadesTratamientoProduccion = async () => {
        let actTratamientoProd = await GetObjectDataByFilter("../api/Tratamiento/GetDetalleActividadDiariaTratamientoByIdTratamientoProduccion", "IdProduccion", id);

        CreateDataList(actTratamientoProd, dlActividadesTrat, (item) => { editAlim(item); }, 'colum7', '#');
    }

    const CreateDetailCardProduccion = async () => {
        let detalleProduccion = await GetObjectDataByFilter("../api/Produccion/GetDetalleProduccionByIdProduccion", "IdProduccion", id);

        CreateDetailCard(detalleProduccion, detailBox, numProd, id);
    }



</script>