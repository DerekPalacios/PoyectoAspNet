@page
@{
    ViewData["Title"] = "Produccion";
    <link rel="stylesheet" href="~/css/main.css">
}

<div>
    <div class="colum2">
        <div class="box">
            <h3 class="dl-header">Producciones Activas</h3>
            <ul class="datalist" id="prodDl"></ul>

            <h3 class="dl-header">Historial de Produccion</h3>

            <ul class="datalist" id="histDl"></ul>
        </div>

        <div class="box">
            <div class="formContainer">
                <div class="dateTask">
                    <div class="date-left">
                        <div id="date-number"></div>
                        <div>
                            <div id="datemonth"></div>
                            <div id="dateyear"></div>
                        </div>
                    </div>
                    <div id="dateday"></div>
                </div>
                <a href="~/ProduccionPages/NuevaProduccion" class="Primary-Button" style="width: 100%; display: inline-block; text-align: center;">+ Agregar Produccion</a>
                <div id="tasklist"></div>
            </div>
        </div>
    </div>
</div>

<script type="module">
    import CreateDropdown from "../js/ComponentesJs/DropDownComponent.js";
    import CreateDataList from "../js/ComponentesJs/StatusListComponent.js";
    import GetObjectData from "../js/ComponentesJs/GetDatosByApiUrlComponent.js";
    import SaveObjectData from "../js/ComponentesJs/PutDatoByApiUrlComponent.js";

    window.onload = async () => {

        await cargarDLProduccion();
        await cargarDataGalera();
        await cargarDDAlimento();
        await cargarDataEspeciePollo();

        FechaProd.onchange = () => {
            var fechaInicio = new Date(FechaProd.value);
            fechaInicio.setDate(fechaInicio.getDate() + 45);

            FechaSalidaProd.value = formatear(fechaInicio);
        }
    };

    const cargarDLProduccion = async () => {
        let prodData = await GetObjectData("../api/Produccion/GetVistaListaProduccionSimpleCalculada");
        //response = await response.json();
        CreateDataList(prodData, prodDl, (item) => { editAlim(item); }, 'colum9');
        CreateDataList(prodData, histDl, (item) => { editAlim(item); }, 'colum9');
    };

    const formatear = f => {
        const año = f.getFullYear();
        const mes = ("0" + (f.getMonth() + 1)).substr(-2);
        const dia = ("0" + f.getDate()).substr(-2);
        return `${año}-${mes}-${dia}`
    };

    btnGuardarProduccion.onclick = async () => {
        let url = '../api/Produccion/SaveProD';
        const prodObj = {
            IdProduccion: IdProd.value,
            Lote: LoteProd.value,
            CostoUnitLote: CostoProd.value,
            QuintDisp: QuinProd.value,
            IdAlimento: AlimenProd.value,
            IdEspecie: EspecieProd.value,
            QuintUtil: CapMax.value,
            FechaSalida: FechaSalidaProd.checked,
            IdGalera: GaleraProd.value,
            IdUsuarioRegistro: 1,
            FechaDeIngreso: FechaProd.value
        };

        SaveObjectData(url, prodObj);
    };

    const cargarDDAlimento = async () => {
        let alimentoData = await GetObjectData('../api/Alimento/GetAlimentos');

        CreateDropdown(alimentoData, AlimenProd, 'nombre', 'idAlimento');
    };

    const cargarDataEspeciePollo = async () => {
        let especieData = await GetObjectData("../api/EspeciePollo/GetEspeciesNombreCompuesto");

        CreateDropdown(especieData, EspecieProd, "descripccion", "idEspecie");
    };

    const cargarDataGalera = async () => {
        let galeraData = await GetObjectData("../api/Galera/GetGalera");

        CreateDropdown(galeraData, GaleraProd, "nombre", "idGalera");
    };
</script>








